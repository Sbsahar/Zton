import signal
import sys
import time
import os
import heroku3

from .Config import Config
from .core.logger import logging
from .helpers.functions.converter import Convert
from .helpers.functions.musictool import *
from .helpers.utils.utils import runasync
from .sql_helper.globals import addgvar, delgvar, gvarstatus

__version__ = "3.3.4"
__license__ = "حقـوق سـورس زدثــون"
__author__ = "زدثــون <https://T.me/ZThon>"
__copyright__ = "ZThon Source (C) 2020 - 2024  " + __author__

LOGS = logging.getLogger("زدثــون")

# تأخير استيراد zedub لتجنب الاستيراد الدائري
from .core.session import zedub

# إعداد الإصدار لـ zedub بعد الاستيراد
zedub.version = __version__
bot = zedub

StartTime = time.time()
zedversion = "3.3.4"

# إعداد عنوان المستودع
if Config.UPSTREAM_REPO == "ZThon-Bot":
    UPSTREAM_REPO_URL = "https://github.com/ZThon-Bot/ZTele"
else:
    UPSTREAM_REPO_URL = Config.UPSTREAM_REPO

# إعداد معلومات المجموعات والرسائل
if Config.PRIVATE_GROUP_BOT_API_ID == 0:
    if gvarstatus("PRIVATE_GROUP_BOT_API_ID") is None:
        Config.BOTLOG = False
        Config.BOTLOG_CHATID = "me"
    else:
        Config.BOTLOG_CHATID = int(gvarstatus("PRIVATE_GROUP_BOT_API_ID"))
        Config.PRIVATE_GROUP_BOT_API_ID = int(gvarstatus("PRIVATE_GROUP_BOT_API_ID"))
        Config.BOTLOG = True
else:
    if str(Config.PRIVATE_GROUP_BOT_API_ID)[0] != "-":
        Config.BOTLOG_CHATID = int(f"-" + str(Config.PRIVATE_GROUP_BOT_API_ID))
    else:
        Config.BOTLOG_CHATID = Config.PRIVATE_GROUP_BOT_API_ID
    Config.BOTLOG = True

if Config.PM_LOGGER_GROUP_ID == 0:
    if gvarstatus("PM_LOGGER_GROUP_ID") is None:
        Config.PM_LOGGER_GROUP_ID = -100
    else:
        Config.PM_LOGGER_GROUP_ID = int(gvarstatus("PM_LOGGER_GROUP_ID"))
elif str(Config.PM_LOGGER_GROUP_ID)[0] != "-":
    Config.PM_LOGGER_GROUP_ID = int(f"-" + str(Config.PM_LOGGER_GROUP_ID))

# التحقق من وجود متغيرات البيئة الخاصة بـ Heroku
HEROKU_API_KEY = os.getenv("HEROKU_API_KEY")
HEROKU_APP_NAME = os.getenv("HEROKU_APP_NAME")

try:
    if HEROKU_API_KEY is not None and HEROKU_APP_NAME is not None:
        HEROKU_APP = heroku3.from_key(HEROKU_API_KEY).apps()[HEROKU_APP_NAME]
    else:
        HEROKU_APP = None
except Exception:
    HEROKU_APP = None

# إذا لم يكن HEROKU_APP موجود، يعني أننا على VPS
if HEROKU_APP is None:
    LOGS.info("يتم تشغيل البرنامج على سيرفر VPS")
    # يمكن إضافة إعدادات خاصة بـ VPS هنا
else:
    LOGS.info("يتم تشغيل البرنامج على Heroku")

# المتغيرات العامة
COUNT_MSG = 0
USERS = {}
COUNT_PM = {}
LASTMSG = {}
CMD_HELP = {}
ISAFK = False
AFKREASON = None
CMD_LIST = {}
SUDO_LIST = {}

# لأغراض لاحقة
INT_PLUG = ""
LOAD_PLUG = {}

# المتغيرات
BOTLOG = Config.BOTLOG
BOTLOG_CHATID = Config.BOTLOG_CHATID
PM_LOGGER_GROUP_ID = Config.PM_LOGGER_GROUP_ID